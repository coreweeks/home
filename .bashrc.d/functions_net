# network-related functions

get-public-ip() {
# returns the public ip of the local computer.  help from <http://www.go2linux.org/what-is-my-public-ip-address-with-linux>
#   curl ifconfig.me/all/json
   wget -q -O - icanhazip.com || wget -q -O - checkip.dyndns.org | grep -oE '[0-9.]{7,15}' || curl -s checkip.dyndns.org | grep -oE '[0-9.]{7,15}'
   #if [[ $(which curl) ]]; then
   #   #curl http://www.whatismyip.com/automation/n09230945.asp ||
   #   curl http://automation.whatismyip.com/n09230945.asp ||
   #   curl http://ip.pipeface.com/ ||
   #   curl -s checkip.dyndns.org | grep -oE '[0-9.]{7,15}'
   #else
   #   wget -q -O - checkip.dyndns.org | grep -oE '[0-9.]{7,15}'
   #fi
}

get-ip-location() {
   ip="$(get-public-ip)"
   curl -s http://api.db-ip.com/v2/free/$ip
}

count-ips-from-tcpdump() {
   # used to determine source IPs possibly involved in server issues based on overall occurrence in total traffic
   # first run something like this on the server to get good sample data:
   # tcpdump -i eth0 -nnc 1000

   local file="$1"
   [[ -r "$file" ]] || { echo "file doesn't exist or is unreadable!"; return 1; }
   sed -rne "s;.*IP $IP_REGEX\.?.*;\1;p" "$file" | sort | uniq -c | sort -h
}
