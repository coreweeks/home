#!/bin/bash

# this is an example file for setting up a temporary comfortable environment on
# a remote host in conjunction with yessh()

# see the `yessh` file for more info

[[ -r ~/.bashrc ]] && . ~/.bashrc

infocmp -x 2>/dev/null | grep -q $TERM || export TERM=screen
set -o vi
alias list='ls -halF --color=always'
alias nmap='nmap -T5 --reason -F -Pn'
alias mtr='sudo mtr -s 1472 -i.1 -c1000'
#alias vim='vim -c "set bg=dark" -c "set nu"' # shorter version of below, but limited to 10 '-c' args

run-check() {
   local check_name="$1"
   local check_command
   local output

   check_command="$(grep -ir "$check_name" /etc/nagios/nrpe* | cut -d= -f2)"

   [[ "$check_command" ]] || {
      echo "error: command not found: '$check_command'"
      return 1
   }

   output="$(bash "$check_command" 2>&1)"

   [[ "$output" =~ Permission" "denied$ ]] && {
      # retry with sudo
      output="$(sudo bash "$check_command")"
      echo "$check_command" >&2
   }

   echo "$output"
}

if [[ ! -s "$HOME/.vimrc" ]]; then
   cat <<-EOF >>"$HOME/.vimrc"
	set bg=dark
	set nu
	set is
	set hls
	set cuc
	set cul
	syntax enable
	set ts=3
	set sw=3
	set et
	set ai
	set ci
	EOF
fi

export EDITOR=vim

# set up auto-complete since that doesn't always happen
if [[ $(which complete 2>/dev/null) || $(type complete 2>/dev/null) ]] && [[ -f /etc/bash_completion ]]; then
   [[ $(complete -p) ]] || . /etc/bash_completion
fi

declare -A colors=(
[none]="00"
[black]="30"
[red]="31"
[green]="32"
[yellow]="33"
[blue]="34"
[purple]="35"
[cyan]="36"
[white]="37"
)

# default colors to use
user_color="green"
hostname_color="red"
dir_color="blue"

# make the username red if it's root
[[ $(id -u) -eq 0 ]] && user_color="red"

#echo "PS1 = $PS1"

# default PS1:
#${debian_chroot:+($debian_chroot)}\u@\h:\w\$

# re-arrange the order of items
PS1="\n\n\D{%F %T %Z}\n\u@\h:\w\n\$ "

# set the desired user color
PS1="${PS1/\\u/'\[\033[01;${colors[$user_color]}m\]\u\[\033[${colors[none]}m\]'}"

# set the desired  hostname color (typically red to show it's not local)
PS1="${PS1/\\h/'\[\033[01;${colors[$hostname_color]}m\]\h\[\033[${colors[none]}m\]'}"

# expand the hostname if it matches the pattern
if [[ $(hostname -s) =~ (\.|^)([a-z]{3}[0-9]|s2r[0-9]) || $(hostname -s) =~ (\.|^)nas ]]; then
   [[ $(hostname -s) =~ (\.|^)([a-z]{3}[0-9]|s2r[0-9]) && ! $(hostname -s) =~ (\.|^)nas ]] || PS1="${PS1/\\h/$(hostname -f | sed -re 's;[-.]([^.]+\.?){3}$;;')}"
fi

# export PS1="${debian_chroot:+($debian_chroot)}\u@\h:\w\$ "

# attempt to output the motd
MOTD_RUN=0

for file in /{var/,}run/motd{,.dynamic} /etc/motd /snap/core/current/etc/motd; do
   [[ -s "$file" ]] && cat "$file" && MOTD_RUN=1 && break
done
if [[ $MOTD_RUN -eq 0 ]]; then
   for i in /etc/update-motd.d/*; do
      [[ -r "$i" ]] || continue
      grep -q exec $i || { $i && MOTD_RUN=1; }
   done
fi
if [[ $MOTD_RUN -eq 0 && $(which run-parts 2>/dev/null) ]]; then
   run-parts /etc/update-motd.d/ > /dev/null && MOTD_RUN=1
fi
unset MOTD_RUN

last -F | awk '/'$USER'/ {print "Last login: " $4 " " $5 " " $6 " " $7 " from " $3}' | head -n1
