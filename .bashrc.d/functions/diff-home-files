#!/bin/bash

diff-home-files() {
   local i
   local HOME_DIR="$HOME/home"
   local ACTION="${1:-vimdiff}"
   local FILE_LIST

   _help() {
      # bash 5 doesn't like <<- heredocs with leading tabs within nested functions
      echo "
		Commands:

		[cp|copy|-a]      copy files from ~/ to $HOME_DIR non-interactively

      [diff|vimdiff]    use vimdiff to compare each file that differs between ~/ and $HOME_DIR (this is the default)

      [file]            operate only on the specified file
		" | tr -d '\t'
   }

   # list files that should be ignored
   # filenames relative to $HOME_DIR
   declare -a skip_files=(
   ".bashrc"
   ".bashrc.d/functions/_verify_reqs"
   "etc/sudoers.d/edit-history"
   ".bashrc.d/functions/yessh"
   ".htoprc"
   ".zshrc"
   "etc/hosts"
   "etc/logrotate.d/chrome-history"
   "etc/sudoers"
   "etc/sudoers.d/laptop-sleep"
   "var/spool/cron/crontabs/username"
   ".local/share/applications/chrome-slack-converter.sh"
   "Makefile"
   )

   _print_var_vals ACTION
   case "$ACTION" in
      diff|vimdiff)
         ACTION="vimdiff"
         ;;
      copy|cp|-a)
         ACTION="cp -aiv"
         ;;
      file)
         shift
         unset ACTION
         FILE_LIST="${1##$HOME/}"
         [[ $FILE_LIST =~ ^$HOME ]] || FILE_LIST="$HOME_DIR/$FILE_LIST"
         for i in ${!skip_files[*]}; do
            { echo "$FILE_LIST" | grep -q "${skip_files[$i]}"; } && unset skip_files[$i]
         done
         ;;
      *)
         _help
         return
         ;;
   esac

   [[ $ACTION || $ACTION = "file" ]] || ACTION="vimdiff"
   [[ $FILE_LIST ]] || FILE_LIST=$(find $HOME_DIR -type f ! -iregex '.*\/\.git\/.*')
   _print_var_vals ACTION FILE_LIST

   for i in $FILE_LIST; do
      # check if the file should be skipped
      echo "$i" | grep -qxf <(for i in  ${skip_files[*]}; do echo "$HOME_DIR/$i"; done) && {
         echo "skipping ignored file '$i'..."
         continue
      }

      # the item is within the .bashrc.d directory
      [[ -f "$i" ]] || continue

      # and it isn't .toprc, and it's not a vim swap file
      [[ ! "$i" =~ \.toprc &&
      ! $(file $i) =~ "Vim swap file" &&
      ! "$i" =~ \.md &&
      ! "$i" =~ \.vim\/ ]] || continue
#      echo "i = $i"

      local file1="$(echo "$i" | sed -re "s;$HOME_DIR/(.*);$HOME/\1;")"
#      echo file1="$file1"

      local file2=$i
#      echo file2="$file2"
      if [[ $(md5sum $file1 2>/dev/null | cut -d" " -f1) != $(md5sum $file2 2>/dev/null | cut -d" " -f1) ]]; then
         $ACTION $file1 $file2
      else
         [[ "$FILE_LIST" = "$i" ]] && {
            cat <<-EOF
					no differences between these files:
					$file1
					$file2
				EOF
         }
      fi
   done

   local missed_files
   for i in $HOME/.bashrc.d/*/*; do
      [[ -h "$i" ]] && continue
      [[ -f ${i/$HOME\//$HOME_DIR/} ]] || missed_files+=$'\1'"$i"
   done

   if [[ "$missed_files" ]]; then
      echo
      echo "you may want to copy these to $HOME_DIR:"
      echo "$missed_files" | tr '\1' '\n'
   fi
}

complete -W "copy vimdiff file" $(basename $BASH_SOURCE)
